#ifndef ZRL_CORE_CONSTANTS_H_
#define ZRL_CORE_CONSTANTS_H_

#include <array>
#include <string>
#include <unordered_map>
#include <vector>

#include "vulkan/vulkan.h"

namespace zrl {

constexpr VkDeviceSize _1KB = 1 << 10;
constexpr VkDeviceSize _2KB = 1 << 11;
constexpr VkDeviceSize _4KB = 1 << 12;
constexpr VkDeviceSize _8KB = 1 << 13;
constexpr VkDeviceSize _16KB = 1 << 14;
constexpr VkDeviceSize _32KB = 1 << 15;
constexpr VkDeviceSize _64KB = 1 << 16;
constexpr VkDeviceSize _128KB = 1 << 17;
constexpr VkDeviceSize _256KB = 1 << 18;
constexpr VkDeviceSize _512KB = 1 << 19;
constexpr VkDeviceSize _1MB = 1 << 20;
constexpr VkDeviceSize _2MB = 1 << 21;
constexpr VkDeviceSize _4MB = 1 << 22;
constexpr VkDeviceSize _8MB = 1 << 23;
constexpr VkDeviceSize _16MB = 1 << 24;
constexpr VkDeviceSize _32MB = 1 << 25;
constexpr VkDeviceSize _64MB = 1 << 26;
constexpr VkDeviceSize _128MB = 1 << 27;
constexpr VkDeviceSize _256MB = 1 << 28;
constexpr VkDeviceSize _512MB = 1 << 29;

const std::unordered_map<VkResult, std::string> VkResultStr = {
    {VK_SUCCESS, "VK_SUCCESS"},
    {VK_NOT_READY, "VK_NOT_READY"},
    {VK_TIMEOUT, "VK_TIMEOUT"},
    {VK_EVENT_SET, "VK_EVENT_SET"},
    {VK_EVENT_RESET, "VK_EVENT_RESET"},
    {VK_INCOMPLETE, "VK_INCOMPLETE"},
    {VK_ERROR_OUT_OF_HOST_MEMORY, "VK_ERROR_OUT_OF_HOST_MEMORY"},
    {VK_ERROR_OUT_OF_DEVICE_MEMORY, "VK_ERROR_OUT_OF_DEVICE_MEMORY"},
    {VK_ERROR_INITIALIZATION_FAILED, "VK_ERROR_INITIALIZATION_FAILED"},
    {VK_ERROR_DEVICE_LOST, "VK_ERROR_DEVICE_LOST"},
    {VK_ERROR_MEMORY_MAP_FAILED, "VK_ERROR_MEMORY_MAP_FAILED"},
    {VK_ERROR_LAYER_NOT_PRESENT, "VK_ERROR_LAYER_NOT_PRESENT"},
    {VK_ERROR_EXTENSION_NOT_PRESENT, "VK_ERROR_EXTENSION_NOT_PRESENT"},
    {VK_ERROR_FEATURE_NOT_PRESENT, "VK_ERROR_FEATURE_NOT_PRESENT"},
    {VK_ERROR_INCOMPATIBLE_DRIVER, "VK_ERROR_INCOMPATIBLE_DRIVER"},
    {VK_ERROR_TOO_MANY_OBJECTS, "VK_ERROR_TOO_MANY_OBJECTS"},
    {VK_ERROR_FORMAT_NOT_SUPPORTED, "VK_ERROR_FORMAT_NOT_SUPPORTED"},
    {VK_ERROR_FRAGMENTED_POOL, "VK_ERROR_FRAGMENTED_POOL"},
    {VK_ERROR_OUT_OF_POOL_MEMORY, "VK_ERROR_OUT_OF_POOL_MEMORY"},
    {VK_ERROR_INVALID_EXTERNAL_HANDLE, "VK_ERROR_INVALID_EXTERNAL_HANDLE"},
    {VK_ERROR_SURFACE_LOST_KHR, "VK_ERROR_SURFACE_LOST_KHR"},
    {VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"},
    {VK_SUBOPTIMAL_KHR, "VK_SUBOPTIMAL_KHR"},
    {VK_ERROR_OUT_OF_DATE_KHR, "VK_ERROR_OUT_OF_DATE_KHR"},
    {VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"},
    {VK_ERROR_VALIDATION_FAILED_EXT, "VK_ERROR_VALIDATION_FAILED_EXT"},
    {VK_ERROR_INVALID_SHADER_NV, "VK_ERROR_INVALID_SHADER_NV"},
    {VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,
     "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT"},
    {VK_ERROR_FRAGMENTATION_EXT, "VK_ERROR_FRAGMENTATION_EXT"},
    {VK_ERROR_NOT_PERMITTED_EXT, "VK_ERROR_NOT_PERMITTED_EXT"},
    {VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,
     "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT"},
    {VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT,
     "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT"},
    {VK_ERROR_OUT_OF_POOL_MEMORY_KHR, "VK_ERROR_OUT_OF_POOL_MEMORY_KHR"},
    {VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR,
     "VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR"},
};

constexpr std::array<const char *, 185> VkFormatStr = {
    "VK_FORMAT_UNDEFINED",
    "VK_FORMAT_R4G4_UNORM_PACK8",
    "VK_FORMAT_R4G4B4A4_UNORM_PACK16",
    "VK_FORMAT_B4G4R4A4_UNORM_PACK16",
    "VK_FORMAT_R5G6B5_UNORM_PACK16",
    "VK_FORMAT_B5G6R5_UNORM_PACK16",
    "VK_FORMAT_R5G5B5A1_UNORM_PACK16",
    "VK_FORMAT_B5G5R5A1_UNORM_PACK16",
    "VK_FORMAT_A1R5G5B5_UNORM_PACK16",
    "VK_FORMAT_R8_UNORM",
    "VK_FORMAT_R8_SNORM",
    "VK_FORMAT_R8_USCALED",
    "VK_FORMAT_R8_SSCALED",
    "VK_FORMAT_R8_UINT",
    "VK_FORMAT_R8_SINT",
    "VK_FORMAT_R8_SRGB",
    "VK_FORMAT_R8G8_UNORM",
    "VK_FORMAT_R8G8_SNORM",
    "VK_FORMAT_R8G8_USCALED",
    "VK_FORMAT_R8G8_SSCALED",
    "VK_FORMAT_R8G8_UINT",
    "VK_FORMAT_R8G8_SINT",
    "VK_FORMAT_R8G8_SRGB",
    "VK_FORMAT_R8G8B8_UNORM",
    "VK_FORMAT_R8G8B8_SNORM",
    "VK_FORMAT_R8G8B8_USCALED",
    "VK_FORMAT_R8G8B8_SSCALED",
    "VK_FORMAT_R8G8B8_UINT",
    "VK_FORMAT_R8G8B8_SINT",
    "VK_FORMAT_R8G8B8_SRGB",
    "VK_FORMAT_B8G8R8_UNORM",
    "VK_FORMAT_B8G8R8_SNORM",
    "VK_FORMAT_B8G8R8_USCALED",
    "VK_FORMAT_B8G8R8_SSCALED",
    "VK_FORMAT_B8G8R8_UINT",
    "VK_FORMAT_B8G8R8_SINT",
    "VK_FORMAT_B8G8R8_SRGB",
    "VK_FORMAT_R8G8B8A8_UNORM",
    "VK_FORMAT_R8G8B8A8_SNORM",
    "VK_FORMAT_R8G8B8A8_USCALED",
    "VK_FORMAT_R8G8B8A8_SSCALED",
    "VK_FORMAT_R8G8B8A8_UINT",
    "VK_FORMAT_R8G8B8A8_SINT",
    "VK_FORMAT_R8G8B8A8_SRGB",
    "VK_FORMAT_B8G8R8A8_UNORM",
    "VK_FORMAT_B8G8R8A8_SNORM",
    "VK_FORMAT_B8G8R8A8_USCALED",
    "VK_FORMAT_B8G8R8A8_SSCALED",
    "VK_FORMAT_B8G8R8A8_UINT",
    "VK_FORMAT_B8G8R8A8_SINT",
    "VK_FORMAT_B8G8R8A8_SRGB",
    "VK_FORMAT_A8B8G8R8_UNORM_PACK32",
    "VK_FORMAT_A8B8G8R8_SNORM_PACK32",
    "VK_FORMAT_A8B8G8R8_USCALED_PACK32",
    "VK_FORMAT_A8B8G8R8_SSCALED_PACK32",
    "VK_FORMAT_A8B8G8R8_UINT_PACK32",
    "VK_FORMAT_A8B8G8R8_SINT_PACK32",
    "VK_FORMAT_A8B8G8R8_SRGB_PACK32",
    "VK_FORMAT_A2R10G10B10_UNORM_PACK32",
    "VK_FORMAT_A2R10G10B10_SNORM_PACK32",
    "VK_FORMAT_A2R10G10B10_USCALED_PACK32",
    "VK_FORMAT_A2R10G10B10_SSCALED_PACK32",
    "VK_FORMAT_A2R10G10B10_UINT_PACK32",
    "VK_FORMAT_A2R10G10B10_SINT_PACK32",
    "VK_FORMAT_A2B10G10R10_UNORM_PACK32",
    "VK_FORMAT_A2B10G10R10_SNORM_PACK32",
    "VK_FORMAT_A2B10G10R10_USCALED_PACK32",
    "VK_FORMAT_A2B10G10R10_SSCALED_PACK32",
    "VK_FORMAT_A2B10G10R10_UINT_PACK32",
    "VK_FORMAT_A2B10G10R10_SINT_PACK32",
    "VK_FORMAT_R16_UNORM",
    "VK_FORMAT_R16_SNORM",
    "VK_FORMAT_R16_USCALED",
    "VK_FORMAT_R16_SSCALED",
    "VK_FORMAT_R16_UINT",
    "VK_FORMAT_R16_SINT",
    "VK_FORMAT_R16_SFLOAT",
    "VK_FORMAT_R16G16_UNORM",
    "VK_FORMAT_R16G16_SNORM",
    "VK_FORMAT_R16G16_USCALED",
    "VK_FORMAT_R16G16_SSCALED",
    "VK_FORMAT_R16G16_UINT",
    "VK_FORMAT_R16G16_SINT",
    "VK_FORMAT_R16G16_SFLOAT",
    "VK_FORMAT_R16G16B16_UNORM",
    "VK_FORMAT_R16G16B16_SNORM",
    "VK_FORMAT_R16G16B16_USCALED",
    "VK_FORMAT_R16G16B16_SSCALED",
    "VK_FORMAT_R16G16B16_UINT",
    "VK_FORMAT_R16G16B16_SINT",
    "VK_FORMAT_R16G16B16_SFLOAT",
    "VK_FORMAT_R16G16B16A16_UNORM",
    "VK_FORMAT_R16G16B16A16_SNORM",
    "VK_FORMAT_R16G16B16A16_USCALED",
    "VK_FORMAT_R16G16B16A16_SSCALED",
    "VK_FORMAT_R16G16B16A16_UINT",
    "VK_FORMAT_R16G16B16A16_SINT",
    "VK_FORMAT_R16G16B16A16_SFLOAT",
    "VK_FORMAT_R32_UINT",
    "VK_FORMAT_R32_SINT",
    "VK_FORMAT_R32_SFLOAT",
    "VK_FORMAT_R32G32_UINT",
    "VK_FORMAT_R32G32_SINT",
    "VK_FORMAT_R32G32_SFLOAT",
    "VK_FORMAT_R32G32B32_UINT",
    "VK_FORMAT_R32G32B32_SINT",
    "VK_FORMAT_R32G32B32_SFLOAT",
    "VK_FORMAT_R32G32B32A32_UINT",
    "VK_FORMAT_R32G32B32A32_SINT",
    "VK_FORMAT_R32G32B32A32_SFLOAT",
    "VK_FORMAT_R64_UINT",
    "VK_FORMAT_R64_SINT",
    "VK_FORMAT_R64_SFLOAT",
    "VK_FORMAT_R64G64_UINT",
    "VK_FORMAT_R64G64_SINT",
    "VK_FORMAT_R64G64_SFLOAT",
    "VK_FORMAT_R64G64B64_UINT",
    "VK_FORMAT_R64G64B64_SINT",
    "VK_FORMAT_R64G64B64_SFLOAT",
    "VK_FORMAT_R64G64B64A64_UINT",
    "VK_FORMAT_R64G64B64A64_SINT",
    "VK_FORMAT_R64G64B64A64_SFLOAT",
    "VK_FORMAT_B10G11R11_UFLOAT_PACK32",
    "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32",
    "VK_FORMAT_D16_UNORM",
    "VK_FORMAT_X8_D24_UNORM_PACK32",
    "VK_FORMAT_D32_SFLOAT",
    "VK_FORMAT_S8_UINT",
    "VK_FORMAT_D16_UNORM_S8_UINT",
    "VK_FORMAT_D24_UNORM_S8_UINT",
    "VK_FORMAT_D32_SFLOAT_S8_UINT",
    "VK_FORMAT_BC1_RGB_UNORM_BLOCK",
    "VK_FORMAT_BC1_RGB_SRGB_BLOCK",
    "VK_FORMAT_BC1_RGBA_UNORM_BLOCK",
    "VK_FORMAT_BC1_RGBA_SRGB_BLOCK",
    "VK_FORMAT_BC2_UNORM_BLOCK",
    "VK_FORMAT_BC2_SRGB_BLOCK",
    "VK_FORMAT_BC3_UNORM_BLOCK",
    "VK_FORMAT_BC3_SRGB_BLOCK",
    "VK_FORMAT_BC4_UNORM_BLOCK",
    "VK_FORMAT_BC4_SNORM_BLOCK",
    "VK_FORMAT_BC5_UNORM_BLOCK",
    "VK_FORMAT_BC5_SNORM_BLOCK",
    "VK_FORMAT_BC6H_UFLOAT_BLOCK",
    "VK_FORMAT_BC6H_SFLOAT_BLOCK",
    "VK_FORMAT_BC7_UNORM_BLOCK",
    "VK_FORMAT_BC7_SRGB_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK",
    "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK",
    "VK_FORMAT_EAC_R11_UNORM_BLOCK",
    "VK_FORMAT_EAC_R11_SNORM_BLOCK",
    "VK_FORMAT_EAC_R11G11_UNORM_BLOCK",
    "VK_FORMAT_EAC_R11G11_SNORM_BLOCK",
    "VK_FORMAT_ASTC_4x4_UNORM_BLOCK",
    "VK_FORMAT_ASTC_4x4_SRGB_BLOCK",
    "VK_FORMAT_ASTC_5x4_UNORM_BLOCK",
    "VK_FORMAT_ASTC_5x4_SRGB_BLOCK",
    "VK_FORMAT_ASTC_5x5_UNORM_BLOCK",
    "VK_FORMAT_ASTC_5x5_SRGB_BLOCK",
    "VK_FORMAT_ASTC_6x5_UNORM_BLOCK",
    "VK_FORMAT_ASTC_6x5_SRGB_BLOCK",
    "VK_FORMAT_ASTC_6x6_UNORM_BLOCK",
    "VK_FORMAT_ASTC_6x6_SRGB_BLOCK",
    "VK_FORMAT_ASTC_8x5_UNORM_BLOCK",
    "VK_FORMAT_ASTC_8x5_SRGB_BLOCK",
    "VK_FORMAT_ASTC_8x6_UNORM_BLOCK",
    "VK_FORMAT_ASTC_8x6_SRGB_BLOCK",
    "VK_FORMAT_ASTC_8x8_UNORM_BLOCK",
    "VK_FORMAT_ASTC_8x8_SRGB_BLOCK",
    "VK_FORMAT_ASTC_10x5_UNORM_BLOCK",
    "VK_FORMAT_ASTC_10x5_SRGB_BLOCK",
    "VK_FORMAT_ASTC_10x6_UNORM_BLOCK",
    "VK_FORMAT_ASTC_10x6_SRGB_BLOCK",
    "VK_FORMAT_ASTC_10x8_UNORM_BLOCK",
    "VK_FORMAT_ASTC_10x8_SRGB_BLOCK",
    "VK_FORMAT_ASTC_10x10_UNORM_BLOCK",
    "VK_FORMAT_ASTC_10x10_SRGB_BLOCK",
    "VK_FORMAT_ASTC_12x10_UNORM_BLOCK",
    "VK_FORMAT_ASTC_12x10_SRGB_BLOCK",
    "VK_FORMAT_ASTC_12x12_UNORM_BLOCK",
    "VK_FORMAT_ASTC_12x12_SRGB_BLOCK",
};

constexpr std::array<const char *, 1> VkColorSpaceKHRStr = {
    "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
};

constexpr std::array<const char *, 4> VkPresentModeKHRStr = {
    "VK_PRESENT_MODE_IMMEDIATE_KHR",
    "VK_PRESENT_MODE_MAILBOX_KHR",
    "VK_PRESENT_MODE_FIFO_KHR",
    "VK_PRESENT_MODE_FIFO_RELAXED_KHR",
};

const std::unordered_map<VkDebugReportObjectTypeEXT, std::string>
    VkDebugReportObjectTypeEXTStr = {
        {VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT"},
        {VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT,
         "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT"},
};

const std::unordered_map<VkDebugReportFlagBitsEXT, std::string>
    VkDebugReportFlagBitsEXTStr = {
        {VK_DEBUG_REPORT_INFORMATION_BIT_EXT,
         "VK_DEBUG_REPORT_INFORMATION_BIT_EXT"},
        {VK_DEBUG_REPORT_WARNING_BIT_EXT, "VK_DEBUG_REPORT_WARNING_BIT_EXT"},
        {VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,
         "VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT"},
        {VK_DEBUG_REPORT_ERROR_BIT_EXT, "VK_DEBUG_REPORT_ERROR_BIT_EXT"},
        {VK_DEBUG_REPORT_DEBUG_BIT_EXT, "VK_DEBUG_REPORT_DEBUG_BIT_EXT"},
};

const std::unordered_map<VkMemoryPropertyFlagBits, std::string>
    VkMemoryPropertyFlagBitsStr = {
        {VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,
         "VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT"},
        {VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,
         "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT"},
        {VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
         "VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"},
        {VK_MEMORY_PROPERTY_HOST_CACHED_BIT,
         "VK_MEMORY_PROPERTY_HOST_CACHED_BIT"},
        {VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,
         "VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"},
        {VK_MEMORY_PROPERTY_PROTECTED_BIT, "VK_MEMORY_PROPERTY_PROTECTED_BIT"},
};

const std::unordered_map<VkMemoryHeapFlagBits, std::string>
    VkMemoryHeapFlagBitsStr = {
        {VK_MEMORY_HEAP_DEVICE_LOCAL_BIT, "VK_MEMORY_HEAP_DEVICE_LOCAL_BIT"},
        {VK_MEMORY_HEAP_MULTI_INSTANCE_BIT,
         "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT"},
};

constexpr std::array<const char *, 11> VkDescriptorTypeStr = {
    "VK_DESCRIPTOR_TYPE_SAMPLER",
    "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER",
    "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE",
    "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE",
    "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER",
    "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER",
    "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER",
    "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER",
    "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC",
    "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC",
    "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT",
};

const std::unordered_map<VkShaderStageFlagBits, std::string>
    VkShaderStageFlagBitsStr = {
        {VK_SHADER_STAGE_VERTEX_BIT, "VK_SHADER_STAGE_VERTEX_BIT"},
        {VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
         "VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"},
        {VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,
         "VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"},
        {VK_SHADER_STAGE_GEOMETRY_BIT, "VK_SHADER_STAGE_GEOMETRY_BIT"},
        {VK_SHADER_STAGE_FRAGMENT_BIT, "VK_SHADER_STAGE_FRAGMENT_BIT"},
        {VK_SHADER_STAGE_COMPUTE_BIT, "VK_SHADER_STAGE_COMPUTE_BIT"},
        {VK_SHADER_STAGE_ALL_GRAPHICS, "VK_SHADER_STAGE_ALL_GRAPHICS"},
        {VK_SHADER_STAGE_ALL, "VK_SHADER_STAGE_ALL"},
        {VK_SHADER_STAGE_RAYGEN_BIT_NV, "VK_SHADER_STAGE_RAYGEN_BIT_NV"},
        {VK_SHADER_STAGE_ANY_HIT_BIT_NV, "VK_SHADER_STAGE_ANY_HIT_BIT_NV"},
        {VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV,
         "VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV"},
        {VK_SHADER_STAGE_MISS_BIT_NV, "VK_SHADER_STAGE_MISS_BIT_NV"},
        {VK_SHADER_STAGE_INTERSECTION_BIT_NV,
         "VK_SHADER_STAGE_INTERSECTION_BIT_NV"},
        {VK_SHADER_STAGE_CALLABLE_BIT_NV, "VK_SHADER_STAGE_CALLABLE_BIT_NV"},
        {VK_SHADER_STAGE_TASK_BIT_NV, "VK_SHADER_STAGE_TASK_BIT_NV"},
        {VK_SHADER_STAGE_MESH_BIT_NV, "VK_SHADER_STAGE_MESH_BIT_NV"},
};

constexpr std::array<const char *, 8> VkShaderStageFlagBitsShortStr = {
    "VERTEX",
    "TESSELLATION_CONTROL",
    "TESSELLATION_EVALUATION",
    "GEOMETRY",
    "FRAGMENT",
    "COMPUTE",
    "ALL_GRAPHICS",
    "ALL",
};

constexpr std::array<const char *, 2> VkIndexTypeStr = {
    "VK_INDEX_TYPE_UINT16",
    "VK_INDEX_TYPE_UINT32",
};

constexpr std::array<const char *, 5> VkPhysicalDeviceTypeStr = {
    "VK_PHYSICAL_DEVICE_TYPE_OTHER",
    "VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU",
    "VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU",
    "VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU",
    "VK_PHYSICAL_DEVICE_TYPE_CPU",
};

const std::unordered_map<VkQueueFlagBits, std::string> VkQueueFlagBitsStr = {
    {VK_QUEUE_GRAPHICS_BIT, "VK_QUEUE_GRAPHICS_BIT"},
    {VK_QUEUE_COMPUTE_BIT, "VK_QUEUE_COMPUTE_BIT"},
    {VK_QUEUE_TRANSFER_BIT, "VK_QUEUE_TRANSFER_BIT"},
    {VK_QUEUE_SPARSE_BINDING_BIT, "VK_QUEUE_SPARSE_BINDING_BIT"},
    {VK_QUEUE_PROTECTED_BIT, "VK_QUEUE_PROTECTED_BIT"},
};

} // namespace zrl

#endif // ZRL_CORE_CONSTANTS_H_
